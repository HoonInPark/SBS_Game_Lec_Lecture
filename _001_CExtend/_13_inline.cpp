#include <iostream>
/* 매크로 함수
* 장점 : 함수가 아니라 전처리기에 의해 치환되므로 함수로 이동할 필요가 없어서 
*        속도가 빠르다.
* 단점 : 복잡한 코드는 실수하기 매우 쉽다.
* 
* 일반 함수
* 장점 : 복잡한 코드를 구현하기 쉽다.
* 단점 : 함수호출시 함수 위치로 이동하므로 빈번한 호출시 속도가 느려진다.
* 
* C++에서는 함수 앞에 inline을 붙여주면
* 해당 함수를 호출할 때 해당 함수의 코드를 호출한 곳으로 삽입하므로
* 구현은 일반함수처럼 쉽고, 속도는 매크로 함수와 동일한 효과를 가져오도록 할 수 있다.
* 다만 실제 코드가 삽입될 수도 있고 안될 수도 있는데 그것은 컴파일러가 판단하도록 한다.
*/
#define ADD(x, y)  ((x)+(y))

using namespace std;

inline int Add(int a, int b)
{
	return a + b;
}

void main()
{
	cout << Add(10, 20) << endl;
	cout << ADD(100, 200) << endl;
}